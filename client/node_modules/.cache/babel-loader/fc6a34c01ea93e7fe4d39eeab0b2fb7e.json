{"ast":null,"code":"export function calculateWinner(squares) {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}\nvar concat = function (a, b, c, board) {\n  // board = board.map(function name(value) {\n  //     return (value === null ? value = \"null\" : value)\n  // })\n\n  var result = board[a] + board[b] + board[c];\n  switch (result) {\n    case \"xxnull\":\n      return [\"x\", c];\n      break;\n    case \"xnullx\":\n      return [\"x\", b];\n      break;\n    case \"nullxx\":\n      return [\"x\", a];\n      break;\n    case \"oonull\":\n      return [\"o\", c];\n      break;\n    case \"onullo\":\n      return [\"o\", b];\n      break;\n    case \"nulloo\":\n      return [\"o\", a];\n      break;\n    default:\n      return [\"k\", a];\n      break;\n  }\n};\nexport function getRandomInt(min, max) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min)) + min;\n  //Максимум не включается, минимум включается\n}\n\nexport function getNextStep(board) {\n  //проверка комбинаций из двух \"оо\"\n  for (var i = 0; i < 3; i++) {\n    var result = concat(i, i + 3, i + 6, board);\n    if (typeof result === \"object\" && result[0] === \"o\") {\n      return result[1];\n    }\n  }\n  for (i = 0; i <= 6; i += 3) {\n    result = concat(i, i + 1, i + 2, board);\n    if (typeof result === \"object\" && result[0] === \"o\") {\n      return result[1];\n    }\n  }\n  result = concat(0, 4, 8, board);\n  if (typeof result === \"object\" && result[0] === \"o\") {\n    return result[1];\n  }\n  result = concat(2, 4, 6, board);\n  if (typeof result === \"object\" && result[0] === \"o\") {\n    return result[1];\n  }\n\n  //проверка комбинаций из двух \"xx\"\n  for (i = 0; i < 3; i++) {\n    result = concat(i, i + 3, i + 6, board);\n    if (typeof result === \"object\" && result[0] === \"x\") {\n      return result[1];\n    }\n  }\n  for (i = 0; i <= 6; i += 3) {\n    result = concat(i, i + 1, i + 2, board);\n    if (typeof result === \"object\" && result[0] === \"x\") {\n      return result[1];\n    }\n  }\n  result = concat(0, 4, 8, board);\n  if (typeof result === \"object\" && result[0] === \"x\") {\n    return result[1];\n  }\n  result = concat(2, 4, 6, board);\n  if (typeof result === \"object\" && result[0] === \"x\") {\n    return result[1];\n  }\n\n  //рандомно ставим о\n  let index = getRandomInt(0, 9);\n  while (board[index]) {\n    index = getRandomInt(0, 9);\n  }\n  return index;\n}","map":{"version":3,"names":["calculateWinner","squares","lines","i","length","a","b","c","concat","board","result","getRandomInt","min","max","Math","ceil","floor","random","getNextStep","index"],"sources":["/home/nmisfit/Desktop/course-work/client/src/pages/GameUtils.js"],"sourcesContent":["export function calculateWinner(squares) {\n    const lines = [\n        [0, 1, 2],\n        [3, 4, 5],\n        [6, 7, 8],\n        [0, 3, 6],\n        [1, 4, 7],\n        [2, 5, 8],\n        [0, 4, 8],\n        [2, 4, 6],\n    ]\n    for (let i = 0; i < lines.length; i++) {\n        const [a, b, c] = lines[i]\n        if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n            return squares[a]\n        }\n    }\n    return null\n}\n\nvar concat = function(a, b, c, board){\n    // board = board.map(function name(value) {\n    //     return (value === null ? value = \"null\" : value)\n    // })\n\n    var result = board[a] + board[b] + board[c] \n    \n    switch (result){\n        case \"xxnull\":\n            return [\"x\", c]\n            break;\n            \n        case \"xnullx\":\n            return [\"x\", b]\n            break;\n            \n        case \"nullxx\":\n            return [\"x\", a]\n            break;\n            \n        case \"oonull\":\n            return [\"o\", c]\n            break;\n            \n        case \"onullo\":\n            return [\"o\", b]\n            break;\n            \n        case \"nulloo\":\n            return [\"o\", a]\n            break;\n\n        default:\n            return [\"k\", a]\n            break;\n    }\n}\n\nexport function getRandomInt(min, max) {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min)) + min; \n    //Максимум не включается, минимум включается\n  }\n\nexport function getNextStep(board){\n    //проверка комбинаций из двух \"оо\"\n    for (var i = 0; i < 3; i++){\n        var result = concat(i, i + 3, i + 6, board)\n        \n        if (typeof(result) === \"object\" && result[0] === \"o\"){\n            return result[1]\n        }\n    }\n    \n    for (i = 0; i <= 6; i +=3){\n        result = concat(i, i + 1, i + 2, board)\n        \n        if (typeof(result) === \"object\" && result[0] === \"o\"){\n            return result[1]\n        }\n    }\n    \n    result = concat(0, 4, 8, board)\n    if (typeof(result) === \"object\" && result[0] === \"o\"){\n        return result[1]\n    }\n    \n    result = concat(2, 4, 6, board)\n    if (typeof(result) === \"object\" && result[0] === \"o\"){\n        return result[1]\n    }\t\n    \n    //проверка комбинаций из двух \"xx\"\n    for (i = 0; i < 3; i++){\n        result = concat(i, i + 3, i + 6, board)\n        \n        if (typeof(result) === \"object\" && result[0] === \"x\"){\n            return result[1]\n        }\n    }\n    \n    for (i = 0; i <= 6; i +=3){\n        result = concat(i, i + 1, i + 2, board)\n        \n        if (typeof(result) === \"object\" && result[0] === \"x\"){\n            return result[1]\n        }\n    }\n    \n    result = concat(0, 4, 8, board)\n    if (typeof(result) === \"object\" && result[0] === \"x\"){\n        return result[1]\n    }\n    \n    result = concat(2, 4, 6, board)\n    if (typeof(result) === \"object\" && result[0] === \"x\"){\n        return result[1]\n    }\n\n    //рандомно ставим о\n    let index = getRandomInt(0, 9);\n    while (board[index]) {\n        index = getRandomInt(0, 9);\n      }\n    return index\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}