{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  user: null\n};\nconst userSlice = createSlice({\n  name: 'user',\n  initialState,\n  reducers: {\n    setUser: (state, action) => {\n      const {\n        user\n      } = action.payload;\n      state.user = user;\n    }\n  },\n  extraReducers: () => {}\n});\nexport const {\n  setUser\n} = userSlice.actions;\nexport default userSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","user","userSlice","name","reducers","setUser","state","action","payload","extraReducers","actions","reducer"],"sources":["/home/nmisfit/Desktop/course-work/client/src/store/features/userSlice.ts"],"sourcesContent":["import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\n\ntype Role = 'admin' | 'user';\n\nexport interface StoredUser  {\n    id: string;\n    email: string;\n    password: string;\n    nickname\n    img?: string;\n    createdAt: string;\n    role: Role;\n  }\n\ninterface UserState {\n    user: null | StoredUser;\n}\n\nconst initialState: UserState = {\n    user: null,\n};\n\nconst userSlice = createSlice({\n    name: 'user',\n    initialState,\n    reducers: {\n        setUser: (state, action: PayloadAction<UserState>) => {\n            const { user } = action.payload;\n            state.user = user;\n        },\n    },\n    extraReducers: () => { },\n});\n\nexport const { setUser } = userSlice.actions;\nexport default userSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,QAAuB,kBAAkB;AAkB7D,MAAMC,YAAuB,GAAG;EAC5BC,IAAI,EAAE;AACV,CAAC;AAED,MAAMC,SAAS,GAAGH,WAAW,CAAC;EAC1BI,IAAI,EAAE,MAAM;EACZH,YAAY;EACZI,QAAQ,EAAE;IACNC,OAAO,EAAE,CAACC,KAAK,EAAEC,MAAgC,KAAK;MAClD,MAAM;QAAEN;MAAK,CAAC,GAAGM,MAAM,CAACC,OAAO;MAC/BF,KAAK,CAACL,IAAI,GAAGA,IAAI;IACrB;EACJ,CAAC;EACDQ,aAAa,EAAE,MAAM,CAAE;AAC3B,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEJ;AAAQ,CAAC,GAAGH,SAAS,CAACQ,OAAO;AAC5C,eAAeR,SAAS,CAACS,OAAO"},"metadata":{},"sourceType":"module"}